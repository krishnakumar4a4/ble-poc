package io.mosip.greetings

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.util.Log
import android.widget.TextView
import java.lang.System.*

class MainActivity : AppCompatActivity() {

    companion object {
        init {
            loadLibrary("rustylib_binding")
            Conversation.init()
        }
    }

    fun loadRustyLib() {
        loadLibrary("rustylib_binding")
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

//        Log.i("native", "Before loading the library")
//        loadRustyLib()
//        Log.i("native", "After loading the library")

        val conversation = Conversation()

        // key pair 1
        val privateKey1 = listOf(0x2e,  0x4e,  0x33,  0x6a,  0xe3,  0x89,  0x21,  0x92,  0x16,  0xc8,  0x3,  0xd9,  0x99,  0x59,  0x29,  0xf2,  0x35,  0xc4,  0x72,  0x8e,  0x21,  0x31,  0xff,  0x68,  0xbe,  0x8e,  0xaf,  0x1,  0x47,  0x6a,  0xf0,  0x7c).map { it.toByte() }.toByteArray()
        val publicKey1 = listOf(0x43,  0x83,  0x1f,  0xc0,  0x4e,  0xda,  0xfb,  0xa4,  0x60,  0x9d,  0xab,  0x2,  0x7a,  0x87,  0x2,  0x8a,  0xbf,  0x24,  0x98,  0xa2,  0x3b,  0x92,  0x47,  0x7d,  0x31,  0x7,  0x8e,  0x70,  0x74,  0x72,  0x2e,  0x68).map { it.toByte() }.toByteArray()

        // key pair 2
        val privateKey2 = listOf(0xe4,  0x15,  0xad,  0x24,  0xc9,  0x70,  0xf8,  0xca,  0x24,  0x4e,  0xc3,  0x3e,  0xb5,  0x7e,  0x96,  0x82,  0x37,  0x32,  0xcb,  0xf,  0x63,  0x2e,  0x69,  0x91,  0xf5,  0x11,  0x51,  0xb1,  0xe2,  0x87,  0xf2,  0xf1).map { it.toByte() }.toByteArray()
        val publicKey2 = listOf(0xea,  0xf4,  0xa1,  0x9b,  0xc6,  0xc9,  0xbe,  0x97,  0xc1,  0x3e,  0x52,  0x2f,  0xa3,  0xbc,  0xa8,  0x7c,  0xca,  0x45,  0xe7,  0x68,  0xab,  0x9e,  0xbf,  0xf1,  0x66,  0x9d,  0x33,  0xa3,  0x2b,  0x57,  0x4b,  0x14).map { it.toByte() }.toByteArray()

        val encryptedData = conversation.callNativeEncrypt(publicKey2, privateKey1, "Test from kotlin")
//        val decryptedData = conversation.callNativeDecrypt(publicKey1, privateKey2)

        encryptedData.forEach {
            println("The element is $it")
        }

        // ED25519 keys
        val ed25519PrivKey = listOf(0xb0,  0xf8,  0x98,  0x2,  0x79,  0xd4,  0xdf,  0x9f,  0x38,  0x3b,  0xfd,  0x6e,  0x99,  0xb,  0x45,  0xc5,  0xfc,  0xba,  0x1c,  0x4f,  0xbe,  0xf7,  0x6c,  0x27,  0xb9,  0x14,  0x1d,  0xff,  0x50,  0xb9,  0x79,  0x83,  0xfc,  0x6d,  0xef,  0x9c,  0x21,  0x16,  0x17,  0x4,  0x51,  0xbc,  0xf2,  0xc2,  0x76,  0x3f,  0xa9,  0x16,  0x96,  0xd1,  0x21,  0x49,  0x17,  0x59,  0x91,  0xf2,  0x26,  0xb3,  0x4d,  0xdb,  0xe2,  0x32,  0xe1,  0xa7).map { it.toByte() }.toByteArray()
        val jwtToken = conversation.callNativeJWTSign(ed25519PrivKey, "sample subject data for signing")
        println(jwtToken)

        findViewById<TextView>(R.id.greetingField).let {
            it?.text = "Text from rust " + conversation.callNativeOp()
        }
    }
}